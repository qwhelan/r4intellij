buildscript {
    ext.kotlin_version = '1.2.61'

    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.3.5"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'java'
apply plugin: "kotlin"

repositories {
    jcenter()
}
dependencies {
    testCompile "org.mockito:mockito-all:1.10.19"
}

targetCompatibility = "1.8"
sourceCompatibility = "1.8"

sourceSets {
    main {
        java {
            srcDirs 'src', 'gen'
        }
        resources {
            srcDirs 'resources'
        }
    }

    test {
        java {
            srcDirs 'test'
        }
        resources {
            srcDirs 'r-helpers', 'testData'
        }
    }
}

intellij {
 //   version 'IC-LATEST-TRUNK-SNAPSHOT'
//    version 'IC-2017.1.2'
    version 'IC-2018.2'
    pluginName 'R4Intellij'
    downloadSources false
    updateSinceUntilBuild false
    plugins = ['IntelliLang']
}

task copyHelpers(type: Copy) {
    from 'r-helpers'
    into buildDir.toString() + "/buildZip"
}

task copyPluginJar(type: Copy) {
    dependsOn jar
    from buildDir.toString() + "/libs"
    into buildDir.toString() + "/buildZip/lib/"
    include '**/*.jar'
}

task buildPlugin(type: Zip, overwrite: true) {
    dependsOn copyPluginJar, copyHelpers

    from buildDir.toString() + "/buildZip/"
    def name = prepareSandbox.getPluginName()
    into { name }
    baseName = name.toLowerCase()
}

runIde.doFirst {
    def name = prepareSandbox.getPluginName()
    delete(prepareSandbox.getDestinationDir().toString() + "/" + name + "/" + name.toLowerCase() + ".jar")
}

prepareSandbox.doLast {
    copy {
        from buildDir.toString() + "/libs"
        into prepareSandbox.getDestinationDir().toString() + "/" + prepareSandbox.getPluginName()
        include '**/*.jar'
    }
    copy {
        from 'r-helpers'
        into prepareSandbox.getDestinationDir().toString() + "/" + prepareSandbox.getPluginName()
    }
}

test.doFirst {
    def name = prepareSandbox.getPluginName()
    delete(prepareTestingSandbox.getDestinationDir().toString() + "/" + name + "/" + name.toLowerCase() + ".jar")
}

prepareTestingSandbox.doLast {
    copy {
        from buildDir.toString() + "/libs"
        into prepareTestingSandbox.getDestinationDir().toString() + "/" + prepareSandbox.getPluginName()
        include '**/*.jar'
    }
    copy {
        from 'r-helpers'
        into prepareTestingSandbox.getDestinationDir().toString() + "/" + prepareSandbox.getPluginName()
    }
}

